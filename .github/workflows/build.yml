name: Build and Release BitCap IPReporter
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
          - os: ubuntu-latest
            arch: x64
          - os: macos-13
            arch: x64
          - os: macos-latest
            arch: arm64
          - os: windows-latest
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install -U pip
          pip install -r requirements.txt

      - name: Linux - Build standalone binary
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: src/main.py
          output-file: BitCapIPR
          output-dir: dist/BitCapIPR
          mode: standalone
        if: runner.os == 'Linux'

      - name: Linux - Strip
        run: |
          find dist/BitCapIPR/main.dist -iname "*.so*" -type f -exec strip --strip-all {} \;
          strip --strip-all dist/BitCapIPR/main.dist/BitCapIPR
        if: runner.os == 'Linux'

      - name: Linux - Run package script
        shell: bash
        run: |
          mv dist/BitCapIPR/main.dist dist/BitCapIPR/ipr
          # package portable zip archive
          cp README.md dist/BitCapIPR
          zip -r dist/BitCapIPR-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}-portable.zip dist/BitCapIPR
          rm dist/BitCapIPR/README.md

          # package .deb archive with dpkg-deb
          [ -e package ] && rm -rf package
          mkdir -p package/DEBIAN
          mkdir -p package/opt
          mkdir -p package/usr/share/applications
          mkdir -p package/usr/share/icons/hicolor/128x128/apps

          echo "Package: bitcapipr" > package/DEBIAN/control
          echo "Version: ${GITHUB_REF_NAME##v}" >> package/DEBIAN/control
          echo "Maintainer: MatthewWertman" >> package/DEBIAN/control
          echo "Architecture: amd64" >> package/DEBIAN/control
          echo "Homepage: https://github.com/bitcap-co/bitcap-ipr" >> package/DEBIAN/control
          echo "Description: cross-platform IP Reporter that listens for AntMiners, IceRivers, and Whatsminers." >> package/DEBIAN/control

          cp -r dist/BitCapIPR package/opt/
          cp resources/app/icons/BitCapLngLogo_IPR_Full_ORG_BLK-02_Square.png package/usr/share/icons/hicolor/128x128/apps/
          cp resources/linux/ipr.desktop package/usr/share/applications/

          find package/opt/BitCapIPR -type f -exec chmod 644 -- {} +
          find package/opt/BitCapIPR -type d -exec chmod 755 -- {} +
          find package/usr/share -type f -exec chmod 644 -- {} +
          chmod +x package/opt/BitCapIPR/ipr/BitCapIPR

          dpkg-deb --build --root-owner-group package "dist/BitCapIPR-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.deb"
        if: runner.os == 'Linux'

      - name: MacOS - Remove problematic brew libs
        run: |
          brew remove --force --ignore-dependencies openssl@3
          brew cleanup openssl@3
        if: runner.os == 'macOS' && runner.arch == 'X64'

      - name: MacOS - Build app bundle
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: src/main.py
          output-file: BitCapIPR.bin
          output-dir: dist
          mode: standalone
          macos-app-name: BitCapIPR
          macos-app-icon: resources/app/icons/BitCapLngLogo_IPR_Full_ORG_BLK-02_Square.icns
        if: runner.os == 'macOS'

      - name: MacOS - Strip
        run: |
          find dist/main.app -iname "*.so*" -type f -exec strip {} \;
          find dist/main.app -iname "*.dylib" -type f -exec strip {} \;
          find dist/main.app -iname "*.bin" -type f -exec strip {} \;
        if: runner.os == 'macOS'

      - name: MacOS - Run package script
        shell: bash
        run: |
          mv dist/main.app dist/BitCapIPR.app
          # package portable zip archive
          cp README.md dist/BitCapIPR.app/Contents
          zip -9 -y -r dist/BitCapIPR-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}-portable.zip dist/BitCapIPR.app
          rm dist/BitCapIPR.app/Contents/README.md

          # package .dmg with create-dmg
          brew install create-dmg
          mkdir -p dist/dmg
          cp -r dist/BitCapIPR.app dist/dmg
          DMG_FS="HFS+"
          if [[ "$ImageOS" == "macos13" ]]; then DMG_FS="APFS"; fi
          create-dmg \
            --volname "BitCapIPR" \
            --filesystem $DMG_FS \
            --volicon "resources/app/icons/BitCapLngLogo_IPR_Full_ORG_BLK-02_Square.icns" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "BitCapIPR.app" 175 120 \
            --hide-extension "BitCapIPR.app" \
            --app-drop-link 425 120 \
            "dist/BitCapIPR-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}-setup.dmg" \
            "dist/dmg/"
        if: runner.os == 'macOS'

      - name: Windows - build standalone binary
        uses: Nuitka/Nuitka-Action@main
        with:
          script-name: src/main.py
          output-file: BitCapIPR.exe
          output-dir: dist/BitCapIPR
          mode: standalone
          windows-console-mode: disable
          windows-icon-from-ico: resources/app/icons/BitCapLngLogo_IPR_Full_ORG_BLK-02_Square.ico
        if: runner.os == 'Windows'

      - name: Windows - Run package script
        shell: pwsh
        run: |
          Rename-Item -Path .\dist\BitCapIPR\main.dist -NewName ipr

          # package portable zip archive
          Copy-Item .\README.md .\dist\BitCapIPR
          Compress-Archive -Path .\dist\BitCapIPR -DestinationPath .\dist\BitCapIPR-${{ github.ref_name }}-win-${{ matrix.arch }}-portable.zip -Force
          Remove-Item -Path .\dist\BitCapIPR\README.md

          # package setup installer with innosetup
          choco install innosetup
          ISCC.exe .\setup\setup.iss /O".\dist\"
          Rename-Item -Path .\dist\BitCapIPR-setup.exe -NewName "BitCapIPR-${{ github.ref_name }}-win-${{ matrix.arch }}-setup.exe"
        if: runner.os == 'Windows'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ runner.arch }}
          path: |
            dist/*.zip
            dist/*.dmg
            dist/*.deb
            dist/*-setup.exe

  release:
    name: Create release
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and extract artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          name: BitCap IPReporter ${{ github.ref_name }} Release
          draft: true
          prerelease: false
          files: |
            ${{ github.workspace }}/artifacts/ubuntu-22.04-X64/*.zip
            ${{ github.workspace }}/artifacts/ubuntu-22.04-X64/*.deb
            ${{ github.workspace }}/artifacts/ubuntu-latest-X64/*.zip
            ${{ github.workspace }}/artifacts/ubuntu-latest-X64/*.deb
            ${{ github.workspace }}/artifacts/macos-13-X64/*.zip
            ${{ github.workspace }}/artifacts/macos-13-X64/*.dmg
            ${{ github.workspace }}/artifacts/macos-latest-ARM64/*.zip
            ${{ github.workspace }}/artifacts/macos-latest-ARM64/*.dmg
            ${{ github.workspace }}/artifacts/windows-latest-X64/*.zip
            ${{ github.workspace }}/artifacts/windows-latest-X64/*-setup.exe
